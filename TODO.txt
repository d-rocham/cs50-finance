### C$50 Finance ###

== Project scope & objectives ==:

Implement an improved version of the asked project. Include Flask frameworks for database management, forms, user authentication and other aspects as taught by Miguel Grinberg  & Corey Schaffer.

DO NOT work everything on the same file. Attempt to separate application by modules following Corey Schaffer's instructions

In the frontend, implement client-side form verification through the Validation API. Use async functions. Create only 2 pages for quoting indexes & checking history.

Design a proper database with (most likely) two tables for user login information & transaction history.


== Basic page structure ==
    "Register / Login"
        Change password / Forgot password

    "Manage your stock":
        Allow user to check index quotes.
        Attempt to:
            Enable search through both company name & index name
            Make indexes to appear as user types down
            Inform the user through a notification when an acquired index' price has risen to a certain threshold
        Buying & selling should be possible from the same page.
        
        Important! All API calls should be performed through the server. Client should only communicate with server, not with third party APIS.
    
    "Transaction history"
        A simple table detailing information about transactions.
